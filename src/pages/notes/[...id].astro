---
import { getCollection, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { buildCrumbs, getNavigationTree } from "../../lib/navigation";
import { interweave } from "../../lib/arrays";
import * as components from "../../lib/remark/mdx-components";
import { twMerge } from "tailwind-merge";

export async function getStaticPaths() {
    const notes = await getCollection("notes");
    const tree = await getNavigationTree();

    return notes.map((post) => {
        const crumbs = tree.map((t) => buildCrumbs(t, post.id.replace(/\/_index$/, ""))).find(Boolean);

        return {
            params: { id: post.id.replace(/_index$/, "") },
            props: { post, crumbs },
        };
    });
}

const { post, crumbs } = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(post);
---

<Layout
    metadata={{
        title: post.data.title,
        description: remarkPluginFrontmatter.description,
    }}
>
    <article
        class={twMerge(
            "prose dark:prose-invert hyphens-auto text-justify",
            "prose-headings:font-mono",
            "prose-a:text-blue-500 prose-a:underline-offset-3 prose-a:decoration-[2px]"
        )}
    >
        {
            crumbs && crumbs.length > 1 && (
                <span class="not-prose font-mono text-neutral-500 dark:text-neutral-400">
                    {interweave(
                        crumbs
                            .map((c) => (
                                <a href={c.href} class="inline-block hover:underline decoration-2 underline-offset-2">
                                    {c.title?.trim()}
                                </a>
                            ))
                            .slice(0, -1),
                        (e, i) => (
                            <span class="mx-2 text-neutral-300 dark:text-neutral-600">/</span>
                        )
                    )}
                </span>
            )
        }
        <h1 class="mb-10 font-bold text-5xl leading-14 text-left">{post.data.title}</h1>
        <Content components={{ ...components }} />
    </article>
</Layout>
